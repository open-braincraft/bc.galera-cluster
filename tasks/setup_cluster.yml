---
# tasks file for bc.galera-cluster
- name: Add an apt key to the keyserver
  shell: apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8

- name: Add a repository
  apt_repository:
    repo: 'deb [arch=amd64,i386,ppc64el] http://nyc2.mirrors.digitalocean.com/mariadb/repo/10.2/ubuntu xenial main'
    state: present

- name: Install mariadb-server and rsync
  apt:
    name: ['mariadb-server','rsync','python-pymysql']
    state: present

- name: setup_cluster | checking if galera cluster setup
  stat:
    path: "/etc/galera_cluster_configured"
  register: "galera_cluster_configured"

- name: Configurate Galera and MySQL
  template:
    src: '{{ item }}.j2'
    dest: '/etc/{{ item }}'
  with_items:
    - 'mysql/my.cnf'
    - 'mysql/conf.d/galera.cnf'

- name: Stop mariadb-service
  service:
    name: mysql
    state: stopped
  when: not galera_cluster_configured.stat.exists

- name: Generate a Galera Cluster
  shell: galera_new_cluster
  run_once: true
  when: not galera_cluster_configured.stat.exists

- name: Start mariadb-server
  service:
    name: mysql
    state: started
  when: not galera_cluster_configured.stat.exists

- name: setup_cluster | marking galera cluster as configured
  file:
    path: "/etc/galera_cluster_configured"
    state: "touch"
  when: not galera_cluster_configured.stat.exists

- name: debian | configuring root my.cnf
  template:
    src: "root/my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: "root"
    group: "root"
    mode: "u=rw,g=,o="

- name: check if the maxscale user already exists
  shell: mysql -u root -p{{ mariadb_mysql_root_password }} -e "SELECT user FROM mysql.user WHERE user='{{ maxscale_user }}'"
  register: mysql_output

- name: Create the maxscale user on the mysql database
  shell: mysql -u root -p{{ mariadb_mysql_root_password }} -e "{{ item }}"
  with_items:
    - "CREATE USER IF NOT EXISTS '{{ maxscale_user }}'@'%' IDENTIFIED BY '{{ maxscale_root_pw }}'"
    - "GRANT SELECT ON mysql.db TO '{{ maxscale_user }}'@'%'"
    - "GRANT SELECT ON mysql.user TO '{{ maxscale_user }}'@'%'"
    - "GRANT SHOW DATABASES ON *.* TO '{{ maxscale_user }}'@'%'"
